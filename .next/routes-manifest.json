{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/add-product",
      "regex": "^/add\\-product(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/add\\-product(?:/)?$"
    },
    {
      "page": "/admin/logs",
      "regex": "^/admin/logs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/logs(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/partner/dashboard",
      "regex": "^/partner/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/partner/dashboard(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    },
    {
      "page": "/signup/choose-type",
      "regex": "^/signup/choose\\-type(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup/choose\\-type(?:/)?$"
    },
    {
      "page": "/signup/complete",
      "regex": "^/signup/complete(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup/complete(?:/)?$"
    },
    {
      "page": "/signup/partner/step1",
      "regex": "^/signup/partner/step1(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup/partner/step1(?:/)?$"
    },
    {
      "page": "/signup/partner/step2",
      "regex": "^/signup/partner/step2(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup/partner/step2(?:/)?$"
    },
    {
      "page": "/signup/partner/step3",
      "regex": "^/signup/partner/step3(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup/partner/step3(?:/)?$"
    },
    {
      "page": "/signup/social-additional-info",
      "regex": "^/signup/social\\-additional\\-info(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup/social\\-additional\\-info(?:/)?$"
    },
    {
      "page": "/signup/terms",
      "regex": "^/signup/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup/terms(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}