// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/dashboard" | "/admin/logs" | "/admin/magazine" | "/admin/magazine/edit/[id]" | "/admin/magazine/view/[id]" | "/admin/magazine/write" | "/admin/users" | "/category/[id]" | "/login" | "/magazine" | "/magazine/[id]" | "/order/[productId]" | "/partner/dashboard" | "/partner/order/history" | "/partner/product/add" | "/partner/product/edit/[id]" | "/partner/product/management" | "/partner/store/management" | "/payments" | "/shopping-cart" | "/signup" | "/signup/choose-type" | "/signup/complete" | "/signup/partner/step1" | "/signup/partner/step2" | "/signup/partner/step3" | "/signup/social-additional-info" | "/signup/terms" | "/store/[id]"
type AppRouteHandlerRoutes = "/api/upload"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin/dashboard": {}
  "/admin/logs": {}
  "/admin/magazine": {}
  "/admin/magazine/edit/[id]": { "id": string; }
  "/admin/magazine/view/[id]": { "id": string; }
  "/admin/magazine/write": {}
  "/admin/users": {}
  "/api/upload": {}
  "/category/[id]": { "id": string; }
  "/login": {}
  "/magazine": {}
  "/magazine/[id]": { "id": string; }
  "/order/[productId]": { "productId": string; }
  "/partner/dashboard": {}
  "/partner/order/history": {}
  "/partner/product/add": {}
  "/partner/product/edit/[id]": { "id": string; }
  "/partner/product/management": {}
  "/partner/store/management": {}
  "/payments": {}
  "/shopping-cart": {}
  "/signup": {}
  "/signup/choose-type": {}
  "/signup/complete": {}
  "/signup/partner/step1": {}
  "/signup/partner/step2": {}
  "/signup/partner/step3": {}
  "/signup/social-additional-info": {}
  "/signup/terms": {}
  "/store/[id]": { "id": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
